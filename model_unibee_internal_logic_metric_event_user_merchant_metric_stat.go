/*
OpenAPI UniBee

This is UniBee api server, For this sample, you can use the api key `EUXAgwv3Vcr1PFWt2SgBumMHXn3ImBqM` to test the authorization filters

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UnibeeInternalLogicMetricEventUserMerchantMetricStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeInternalLogicMetricEventUserMerchantMetricStat{}

// UnibeeInternalLogicMetricEventUserMerchantMetricStat struct for UnibeeInternalLogicMetricEventUserMerchantMetricStat
type UnibeeInternalLogicMetricEventUserMerchantMetricStat struct {
	CurrentUseValue *int32 `json:"CurrentUseValue,omitempty"`
	MetricLimit *UnibeeInternalLogicMetricEventMetricLimitVo `json:"MetricLimit,omitempty"`
}

// NewUnibeeInternalLogicMetricEventUserMerchantMetricStat instantiates a new UnibeeInternalLogicMetricEventUserMerchantMetricStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeInternalLogicMetricEventUserMerchantMetricStat() *UnibeeInternalLogicMetricEventUserMerchantMetricStat {
	this := UnibeeInternalLogicMetricEventUserMerchantMetricStat{}
	return &this
}

// NewUnibeeInternalLogicMetricEventUserMerchantMetricStatWithDefaults instantiates a new UnibeeInternalLogicMetricEventUserMerchantMetricStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeInternalLogicMetricEventUserMerchantMetricStatWithDefaults() *UnibeeInternalLogicMetricEventUserMerchantMetricStat {
	this := UnibeeInternalLogicMetricEventUserMerchantMetricStat{}
	return &this
}

// GetCurrentUseValue returns the CurrentUseValue field value if set, zero value otherwise.
func (o *UnibeeInternalLogicMetricEventUserMerchantMetricStat) GetCurrentUseValue() int32 {
	if o == nil || IsNil(o.CurrentUseValue) {
		var ret int32
		return ret
	}
	return *o.CurrentUseValue
}

// GetCurrentUseValueOk returns a tuple with the CurrentUseValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeInternalLogicMetricEventUserMerchantMetricStat) GetCurrentUseValueOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentUseValue) {
		return nil, false
	}
	return o.CurrentUseValue, true
}

// HasCurrentUseValue returns a boolean if a field has been set.
func (o *UnibeeInternalLogicMetricEventUserMerchantMetricStat) HasCurrentUseValue() bool {
	if o != nil && !IsNil(o.CurrentUseValue) {
		return true
	}

	return false
}

// SetCurrentUseValue gets a reference to the given int32 and assigns it to the CurrentUseValue field.
func (o *UnibeeInternalLogicMetricEventUserMerchantMetricStat) SetCurrentUseValue(v int32) {
	o.CurrentUseValue = &v
}

// GetMetricLimit returns the MetricLimit field value if set, zero value otherwise.
func (o *UnibeeInternalLogicMetricEventUserMerchantMetricStat) GetMetricLimit() UnibeeInternalLogicMetricEventMetricLimitVo {
	if o == nil || IsNil(o.MetricLimit) {
		var ret UnibeeInternalLogicMetricEventMetricLimitVo
		return ret
	}
	return *o.MetricLimit
}

// GetMetricLimitOk returns a tuple with the MetricLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeInternalLogicMetricEventUserMerchantMetricStat) GetMetricLimitOk() (*UnibeeInternalLogicMetricEventMetricLimitVo, bool) {
	if o == nil || IsNil(o.MetricLimit) {
		return nil, false
	}
	return o.MetricLimit, true
}

// HasMetricLimit returns a boolean if a field has been set.
func (o *UnibeeInternalLogicMetricEventUserMerchantMetricStat) HasMetricLimit() bool {
	if o != nil && !IsNil(o.MetricLimit) {
		return true
	}

	return false
}

// SetMetricLimit gets a reference to the given UnibeeInternalLogicMetricEventMetricLimitVo and assigns it to the MetricLimit field.
func (o *UnibeeInternalLogicMetricEventUserMerchantMetricStat) SetMetricLimit(v UnibeeInternalLogicMetricEventMetricLimitVo) {
	o.MetricLimit = &v
}

func (o UnibeeInternalLogicMetricEventUserMerchantMetricStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeInternalLogicMetricEventUserMerchantMetricStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrentUseValue) {
		toSerialize["CurrentUseValue"] = o.CurrentUseValue
	}
	if !IsNil(o.MetricLimit) {
		toSerialize["MetricLimit"] = o.MetricLimit
	}
	return toSerialize, nil
}

type NullableUnibeeInternalLogicMetricEventUserMerchantMetricStat struct {
	value *UnibeeInternalLogicMetricEventUserMerchantMetricStat
	isSet bool
}

func (v NullableUnibeeInternalLogicMetricEventUserMerchantMetricStat) Get() *UnibeeInternalLogicMetricEventUserMerchantMetricStat {
	return v.value
}

func (v *NullableUnibeeInternalLogicMetricEventUserMerchantMetricStat) Set(val *UnibeeInternalLogicMetricEventUserMerchantMetricStat) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeInternalLogicMetricEventUserMerchantMetricStat) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeInternalLogicMetricEventUserMerchantMetricStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeInternalLogicMetricEventUserMerchantMetricStat(val *UnibeeInternalLogicMetricEventUserMerchantMetricStat) *NullableUnibeeInternalLogicMetricEventUserMerchantMetricStat {
	return &NullableUnibeeInternalLogicMetricEventUserMerchantMetricStat{value: val, isSet: true}
}

func (v NullableUnibeeInternalLogicMetricEventUserMerchantMetricStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeInternalLogicMetricEventUserMerchantMetricStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


