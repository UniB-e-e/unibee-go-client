/*
OpenAPI UniBee

This is UniBee api server, For this sample, you can use the api key `EUXAgwv3Vcr1PFWt2SgBumMHXn3ImBqM` to test the authorization filters

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MerchantPaymentCapturePostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantPaymentCapturePostRequest{}

// MerchantPaymentCapturePostRequest struct for MerchantPaymentCapturePostRequest
type MerchantPaymentCapturePostRequest struct {
	// ExternalCaptureId
	ExternalCaptureId string `json:"externalCaptureId"`
	// PaymentId
	PaymentId string `json:"paymentId"`
}

type _MerchantPaymentCapturePostRequest MerchantPaymentCapturePostRequest

// NewMerchantPaymentCapturePostRequest instantiates a new MerchantPaymentCapturePostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantPaymentCapturePostRequest(externalCaptureId string, paymentId string) *MerchantPaymentCapturePostRequest {
	this := MerchantPaymentCapturePostRequest{}
	this.ExternalCaptureId = externalCaptureId
	this.PaymentId = paymentId
	return &this
}

// NewMerchantPaymentCapturePostRequestWithDefaults instantiates a new MerchantPaymentCapturePostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantPaymentCapturePostRequestWithDefaults() *MerchantPaymentCapturePostRequest {
	this := MerchantPaymentCapturePostRequest{}
	return &this
}

// GetExternalCaptureId returns the ExternalCaptureId field value
func (o *MerchantPaymentCapturePostRequest) GetExternalCaptureId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalCaptureId
}

// GetExternalCaptureIdOk returns a tuple with the ExternalCaptureId field value
// and a boolean to check if the value has been set.
func (o *MerchantPaymentCapturePostRequest) GetExternalCaptureIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalCaptureId, true
}

// SetExternalCaptureId sets field value
func (o *MerchantPaymentCapturePostRequest) SetExternalCaptureId(v string) {
	o.ExternalCaptureId = v
}

// GetPaymentId returns the PaymentId field value
func (o *MerchantPaymentCapturePostRequest) GetPaymentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value
// and a boolean to check if the value has been set.
func (o *MerchantPaymentCapturePostRequest) GetPaymentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentId, true
}

// SetPaymentId sets field value
func (o *MerchantPaymentCapturePostRequest) SetPaymentId(v string) {
	o.PaymentId = v
}

func (o MerchantPaymentCapturePostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantPaymentCapturePostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["externalCaptureId"] = o.ExternalCaptureId
	toSerialize["paymentId"] = o.PaymentId
	return toSerialize, nil
}

func (o *MerchantPaymentCapturePostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"externalCaptureId",
		"paymentId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMerchantPaymentCapturePostRequest := _MerchantPaymentCapturePostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMerchantPaymentCapturePostRequest)

	if err != nil {
		return err
	}

	*o = MerchantPaymentCapturePostRequest(varMerchantPaymentCapturePostRequest)

	return err
}

type NullableMerchantPaymentCapturePostRequest struct {
	value *MerchantPaymentCapturePostRequest
	isSet bool
}

func (v NullableMerchantPaymentCapturePostRequest) Get() *MerchantPaymentCapturePostRequest {
	return v.value
}

func (v *NullableMerchantPaymentCapturePostRequest) Set(val *MerchantPaymentCapturePostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantPaymentCapturePostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantPaymentCapturePostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantPaymentCapturePostRequest(val *MerchantPaymentCapturePostRequest) *NullableMerchantPaymentCapturePostRequest {
	return &NullableMerchantPaymentCapturePostRequest{value: val, isSet: true}
}

func (v NullableMerchantPaymentCapturePostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantPaymentCapturePostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


