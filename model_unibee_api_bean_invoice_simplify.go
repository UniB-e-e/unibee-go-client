/*
OpenAPI UniBee

This is UniBee api server, For this sample, you can use the api key `EUXAgwv3Vcr1PFWt2SgBumMHXn3ImBqM` to test the authorization filters

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unibee

import (
	"encoding/json"
)

// checks if the UnibeeApiBeanInvoiceSimplify type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiBeanInvoiceSimplify{}

// UnibeeApiBeanInvoiceSimplify struct for UnibeeApiBeanInvoiceSimplify
type UnibeeApiBeanInvoiceSimplify struct {
	// biz type from payment 1-single payment, 3-subscription
	BizType *int32 `json:"bizType,omitempty"`
	// crypto_amount, cent
	CryptoAmount *int64 `json:"cryptoAmount,omitempty"`
	// crypto_currency
	CryptoCurrency *string `json:"cryptoCurrency,omitempty"`
	Currency *string `json:"currency,omitempty"`
	Id *int64 `json:"id,omitempty"`
	InvoiceId *string `json:"invoiceId,omitempty"`
	InvoiceName *string `json:"invoiceName,omitempty"`
	Lines []UnibeeApiBeanInvoiceItemSimplify `json:"lines,omitempty"`
	// invoice link
	Link *string `json:"link,omitempty"`
	// paymentId
	PaymentId *string `json:"paymentId,omitempty"`
	// invoice payment link
	PaymentLink *string `json:"paymentLink,omitempty"`
	PeriodEnd *int64 `json:"periodEnd,omitempty"`
	PeriodStart *int64 `json:"periodStart,omitempty"`
	ProrationDate *int64 `json:"prorationDate,omitempty"`
	ProrationScale *int64 `json:"prorationScale,omitempty"`
	// refundId
	RefundId *string `json:"refundId,omitempty"`
	// status，0-Init | 1-pending｜2-processing｜3-paid | 4-failed | 5-cancelled
	Status *int32 `json:"status,omitempty"`
	SubscriptionAmount *int64 `json:"subscriptionAmount,omitempty"`
	SubscriptionAmountExcludingTax *int64 `json:"subscriptionAmountExcludingTax,omitempty"`
	TaxAmount *int64 `json:"taxAmount,omitempty"`
	// Tax Scale，1000 = 10%
	TaxScale *int64 `json:"taxScale,omitempty"`
	TotalAmount *int64 `json:"totalAmount,omitempty"`
	TotalAmountExcludingTax *int64 `json:"totalAmountExcludingTax,omitempty"`
}

// NewUnibeeApiBeanInvoiceSimplify instantiates a new UnibeeApiBeanInvoiceSimplify object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiBeanInvoiceSimplify() *UnibeeApiBeanInvoiceSimplify {
	this := UnibeeApiBeanInvoiceSimplify{}
	return &this
}

// NewUnibeeApiBeanInvoiceSimplifyWithDefaults instantiates a new UnibeeApiBeanInvoiceSimplify object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiBeanInvoiceSimplifyWithDefaults() *UnibeeApiBeanInvoiceSimplify {
	this := UnibeeApiBeanInvoiceSimplify{}
	return &this
}

// GetBizType returns the BizType field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetBizType() int32 {
	if o == nil || IsNil(o.BizType) {
		var ret int32
		return ret
	}
	return *o.BizType
}

// GetBizTypeOk returns a tuple with the BizType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetBizTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.BizType) {
		return nil, false
	}
	return o.BizType, true
}

// HasBizType returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasBizType() bool {
	if o != nil && !IsNil(o.BizType) {
		return true
	}

	return false
}

// SetBizType gets a reference to the given int32 and assigns it to the BizType field.
func (o *UnibeeApiBeanInvoiceSimplify) SetBizType(v int32) {
	o.BizType = &v
}

// GetCryptoAmount returns the CryptoAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetCryptoAmount() int64 {
	if o == nil || IsNil(o.CryptoAmount) {
		var ret int64
		return ret
	}
	return *o.CryptoAmount
}

// GetCryptoAmountOk returns a tuple with the CryptoAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetCryptoAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.CryptoAmount) {
		return nil, false
	}
	return o.CryptoAmount, true
}

// HasCryptoAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasCryptoAmount() bool {
	if o != nil && !IsNil(o.CryptoAmount) {
		return true
	}

	return false
}

// SetCryptoAmount gets a reference to the given int64 and assigns it to the CryptoAmount field.
func (o *UnibeeApiBeanInvoiceSimplify) SetCryptoAmount(v int64) {
	o.CryptoAmount = &v
}

// GetCryptoCurrency returns the CryptoCurrency field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetCryptoCurrency() string {
	if o == nil || IsNil(o.CryptoCurrency) {
		var ret string
		return ret
	}
	return *o.CryptoCurrency
}

// GetCryptoCurrencyOk returns a tuple with the CryptoCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetCryptoCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.CryptoCurrency) {
		return nil, false
	}
	return o.CryptoCurrency, true
}

// HasCryptoCurrency returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasCryptoCurrency() bool {
	if o != nil && !IsNil(o.CryptoCurrency) {
		return true
	}

	return false
}

// SetCryptoCurrency gets a reference to the given string and assigns it to the CryptoCurrency field.
func (o *UnibeeApiBeanInvoiceSimplify) SetCryptoCurrency(v string) {
	o.CryptoCurrency = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *UnibeeApiBeanInvoiceSimplify) SetCurrency(v string) {
	o.Currency = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *UnibeeApiBeanInvoiceSimplify) SetId(v int64) {
	o.Id = &v
}

// GetInvoiceId returns the InvoiceId field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetInvoiceId() string {
	if o == nil || IsNil(o.InvoiceId) {
		var ret string
		return ret
	}
	return *o.InvoiceId
}

// GetInvoiceIdOk returns a tuple with the InvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetInvoiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceId) {
		return nil, false
	}
	return o.InvoiceId, true
}

// HasInvoiceId returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasInvoiceId() bool {
	if o != nil && !IsNil(o.InvoiceId) {
		return true
	}

	return false
}

// SetInvoiceId gets a reference to the given string and assigns it to the InvoiceId field.
func (o *UnibeeApiBeanInvoiceSimplify) SetInvoiceId(v string) {
	o.InvoiceId = &v
}

// GetInvoiceName returns the InvoiceName field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetInvoiceName() string {
	if o == nil || IsNil(o.InvoiceName) {
		var ret string
		return ret
	}
	return *o.InvoiceName
}

// GetInvoiceNameOk returns a tuple with the InvoiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetInvoiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceName) {
		return nil, false
	}
	return o.InvoiceName, true
}

// HasInvoiceName returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasInvoiceName() bool {
	if o != nil && !IsNil(o.InvoiceName) {
		return true
	}

	return false
}

// SetInvoiceName gets a reference to the given string and assigns it to the InvoiceName field.
func (o *UnibeeApiBeanInvoiceSimplify) SetInvoiceName(v string) {
	o.InvoiceName = &v
}

// GetLines returns the Lines field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetLines() []UnibeeApiBeanInvoiceItemSimplify {
	if o == nil || IsNil(o.Lines) {
		var ret []UnibeeApiBeanInvoiceItemSimplify
		return ret
	}
	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetLinesOk() ([]UnibeeApiBeanInvoiceItemSimplify, bool) {
	if o == nil || IsNil(o.Lines) {
		return nil, false
	}
	return o.Lines, true
}

// HasLines returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasLines() bool {
	if o != nil && !IsNil(o.Lines) {
		return true
	}

	return false
}

// SetLines gets a reference to the given []UnibeeApiBeanInvoiceItemSimplify and assigns it to the Lines field.
func (o *UnibeeApiBeanInvoiceSimplify) SetLines(v []UnibeeApiBeanInvoiceItemSimplify) {
	o.Lines = v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *UnibeeApiBeanInvoiceSimplify) SetLink(v string) {
	o.Link = &v
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetPaymentId() string {
	if o == nil || IsNil(o.PaymentId) {
		var ret string
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetPaymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentId) {
		return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasPaymentId() bool {
	if o != nil && !IsNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given string and assigns it to the PaymentId field.
func (o *UnibeeApiBeanInvoiceSimplify) SetPaymentId(v string) {
	o.PaymentId = &v
}

// GetPaymentLink returns the PaymentLink field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetPaymentLink() string {
	if o == nil || IsNil(o.PaymentLink) {
		var ret string
		return ret
	}
	return *o.PaymentLink
}

// GetPaymentLinkOk returns a tuple with the PaymentLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetPaymentLinkOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentLink) {
		return nil, false
	}
	return o.PaymentLink, true
}

// HasPaymentLink returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasPaymentLink() bool {
	if o != nil && !IsNil(o.PaymentLink) {
		return true
	}

	return false
}

// SetPaymentLink gets a reference to the given string and assigns it to the PaymentLink field.
func (o *UnibeeApiBeanInvoiceSimplify) SetPaymentLink(v string) {
	o.PaymentLink = &v
}

// GetPeriodEnd returns the PeriodEnd field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetPeriodEnd() int64 {
	if o == nil || IsNil(o.PeriodEnd) {
		var ret int64
		return ret
	}
	return *o.PeriodEnd
}

// GetPeriodEndOk returns a tuple with the PeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetPeriodEndOk() (*int64, bool) {
	if o == nil || IsNil(o.PeriodEnd) {
		return nil, false
	}
	return o.PeriodEnd, true
}

// HasPeriodEnd returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasPeriodEnd() bool {
	if o != nil && !IsNil(o.PeriodEnd) {
		return true
	}

	return false
}

// SetPeriodEnd gets a reference to the given int64 and assigns it to the PeriodEnd field.
func (o *UnibeeApiBeanInvoiceSimplify) SetPeriodEnd(v int64) {
	o.PeriodEnd = &v
}

// GetPeriodStart returns the PeriodStart field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetPeriodStart() int64 {
	if o == nil || IsNil(o.PeriodStart) {
		var ret int64
		return ret
	}
	return *o.PeriodStart
}

// GetPeriodStartOk returns a tuple with the PeriodStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetPeriodStartOk() (*int64, bool) {
	if o == nil || IsNil(o.PeriodStart) {
		return nil, false
	}
	return o.PeriodStart, true
}

// HasPeriodStart returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasPeriodStart() bool {
	if o != nil && !IsNil(o.PeriodStart) {
		return true
	}

	return false
}

// SetPeriodStart gets a reference to the given int64 and assigns it to the PeriodStart field.
func (o *UnibeeApiBeanInvoiceSimplify) SetPeriodStart(v int64) {
	o.PeriodStart = &v
}

// GetProrationDate returns the ProrationDate field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetProrationDate() int64 {
	if o == nil || IsNil(o.ProrationDate) {
		var ret int64
		return ret
	}
	return *o.ProrationDate
}

// GetProrationDateOk returns a tuple with the ProrationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetProrationDateOk() (*int64, bool) {
	if o == nil || IsNil(o.ProrationDate) {
		return nil, false
	}
	return o.ProrationDate, true
}

// HasProrationDate returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasProrationDate() bool {
	if o != nil && !IsNil(o.ProrationDate) {
		return true
	}

	return false
}

// SetProrationDate gets a reference to the given int64 and assigns it to the ProrationDate field.
func (o *UnibeeApiBeanInvoiceSimplify) SetProrationDate(v int64) {
	o.ProrationDate = &v
}

// GetProrationScale returns the ProrationScale field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetProrationScale() int64 {
	if o == nil || IsNil(o.ProrationScale) {
		var ret int64
		return ret
	}
	return *o.ProrationScale
}

// GetProrationScaleOk returns a tuple with the ProrationScale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetProrationScaleOk() (*int64, bool) {
	if o == nil || IsNil(o.ProrationScale) {
		return nil, false
	}
	return o.ProrationScale, true
}

// HasProrationScale returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasProrationScale() bool {
	if o != nil && !IsNil(o.ProrationScale) {
		return true
	}

	return false
}

// SetProrationScale gets a reference to the given int64 and assigns it to the ProrationScale field.
func (o *UnibeeApiBeanInvoiceSimplify) SetProrationScale(v int64) {
	o.ProrationScale = &v
}

// GetRefundId returns the RefundId field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetRefundId() string {
	if o == nil || IsNil(o.RefundId) {
		var ret string
		return ret
	}
	return *o.RefundId
}

// GetRefundIdOk returns a tuple with the RefundId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetRefundIdOk() (*string, bool) {
	if o == nil || IsNil(o.RefundId) {
		return nil, false
	}
	return o.RefundId, true
}

// HasRefundId returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasRefundId() bool {
	if o != nil && !IsNil(o.RefundId) {
		return true
	}

	return false
}

// SetRefundId gets a reference to the given string and assigns it to the RefundId field.
func (o *UnibeeApiBeanInvoiceSimplify) SetRefundId(v string) {
	o.RefundId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *UnibeeApiBeanInvoiceSimplify) SetStatus(v int32) {
	o.Status = &v
}

// GetSubscriptionAmount returns the SubscriptionAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetSubscriptionAmount() int64 {
	if o == nil || IsNil(o.SubscriptionAmount) {
		var ret int64
		return ret
	}
	return *o.SubscriptionAmount
}

// GetSubscriptionAmountOk returns a tuple with the SubscriptionAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetSubscriptionAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.SubscriptionAmount) {
		return nil, false
	}
	return o.SubscriptionAmount, true
}

// HasSubscriptionAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasSubscriptionAmount() bool {
	if o != nil && !IsNil(o.SubscriptionAmount) {
		return true
	}

	return false
}

// SetSubscriptionAmount gets a reference to the given int64 and assigns it to the SubscriptionAmount field.
func (o *UnibeeApiBeanInvoiceSimplify) SetSubscriptionAmount(v int64) {
	o.SubscriptionAmount = &v
}

// GetSubscriptionAmountExcludingTax returns the SubscriptionAmountExcludingTax field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetSubscriptionAmountExcludingTax() int64 {
	if o == nil || IsNil(o.SubscriptionAmountExcludingTax) {
		var ret int64
		return ret
	}
	return *o.SubscriptionAmountExcludingTax
}

// GetSubscriptionAmountExcludingTaxOk returns a tuple with the SubscriptionAmountExcludingTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetSubscriptionAmountExcludingTaxOk() (*int64, bool) {
	if o == nil || IsNil(o.SubscriptionAmountExcludingTax) {
		return nil, false
	}
	return o.SubscriptionAmountExcludingTax, true
}

// HasSubscriptionAmountExcludingTax returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasSubscriptionAmountExcludingTax() bool {
	if o != nil && !IsNil(o.SubscriptionAmountExcludingTax) {
		return true
	}

	return false
}

// SetSubscriptionAmountExcludingTax gets a reference to the given int64 and assigns it to the SubscriptionAmountExcludingTax field.
func (o *UnibeeApiBeanInvoiceSimplify) SetSubscriptionAmountExcludingTax(v int64) {
	o.SubscriptionAmountExcludingTax = &v
}

// GetTaxAmount returns the TaxAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetTaxAmount() int64 {
	if o == nil || IsNil(o.TaxAmount) {
		var ret int64
		return ret
	}
	return *o.TaxAmount
}

// GetTaxAmountOk returns a tuple with the TaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetTaxAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.TaxAmount) {
		return nil, false
	}
	return o.TaxAmount, true
}

// HasTaxAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasTaxAmount() bool {
	if o != nil && !IsNil(o.TaxAmount) {
		return true
	}

	return false
}

// SetTaxAmount gets a reference to the given int64 and assigns it to the TaxAmount field.
func (o *UnibeeApiBeanInvoiceSimplify) SetTaxAmount(v int64) {
	o.TaxAmount = &v
}

// GetTaxScale returns the TaxScale field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetTaxScale() int64 {
	if o == nil || IsNil(o.TaxScale) {
		var ret int64
		return ret
	}
	return *o.TaxScale
}

// GetTaxScaleOk returns a tuple with the TaxScale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetTaxScaleOk() (*int64, bool) {
	if o == nil || IsNil(o.TaxScale) {
		return nil, false
	}
	return o.TaxScale, true
}

// HasTaxScale returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasTaxScale() bool {
	if o != nil && !IsNil(o.TaxScale) {
		return true
	}

	return false
}

// SetTaxScale gets a reference to the given int64 and assigns it to the TaxScale field.
func (o *UnibeeApiBeanInvoiceSimplify) SetTaxScale(v int64) {
	o.TaxScale = &v
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetTotalAmount() int64 {
	if o == nil || IsNil(o.TotalAmount) {
		var ret int64
		return ret
	}
	return *o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetTotalAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalAmount) {
		return nil, false
	}
	return o.TotalAmount, true
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasTotalAmount() bool {
	if o != nil && !IsNil(o.TotalAmount) {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given int64 and assigns it to the TotalAmount field.
func (o *UnibeeApiBeanInvoiceSimplify) SetTotalAmount(v int64) {
	o.TotalAmount = &v
}

// GetTotalAmountExcludingTax returns the TotalAmountExcludingTax field value if set, zero value otherwise.
func (o *UnibeeApiBeanInvoiceSimplify) GetTotalAmountExcludingTax() int64 {
	if o == nil || IsNil(o.TotalAmountExcludingTax) {
		var ret int64
		return ret
	}
	return *o.TotalAmountExcludingTax
}

// GetTotalAmountExcludingTaxOk returns a tuple with the TotalAmountExcludingTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiBeanInvoiceSimplify) GetTotalAmountExcludingTaxOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalAmountExcludingTax) {
		return nil, false
	}
	return o.TotalAmountExcludingTax, true
}

// HasTotalAmountExcludingTax returns a boolean if a field has been set.
func (o *UnibeeApiBeanInvoiceSimplify) HasTotalAmountExcludingTax() bool {
	if o != nil && !IsNil(o.TotalAmountExcludingTax) {
		return true
	}

	return false
}

// SetTotalAmountExcludingTax gets a reference to the given int64 and assigns it to the TotalAmountExcludingTax field.
func (o *UnibeeApiBeanInvoiceSimplify) SetTotalAmountExcludingTax(v int64) {
	o.TotalAmountExcludingTax = &v
}

func (o UnibeeApiBeanInvoiceSimplify) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiBeanInvoiceSimplify) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BizType) {
		toSerialize["bizType"] = o.BizType
	}
	if !IsNil(o.CryptoAmount) {
		toSerialize["cryptoAmount"] = o.CryptoAmount
	}
	if !IsNil(o.CryptoCurrency) {
		toSerialize["cryptoCurrency"] = o.CryptoCurrency
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InvoiceId) {
		toSerialize["invoiceId"] = o.InvoiceId
	}
	if !IsNil(o.InvoiceName) {
		toSerialize["invoiceName"] = o.InvoiceName
	}
	if !IsNil(o.Lines) {
		toSerialize["lines"] = o.Lines
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.PaymentId) {
		toSerialize["paymentId"] = o.PaymentId
	}
	if !IsNil(o.PaymentLink) {
		toSerialize["paymentLink"] = o.PaymentLink
	}
	if !IsNil(o.PeriodEnd) {
		toSerialize["periodEnd"] = o.PeriodEnd
	}
	if !IsNil(o.PeriodStart) {
		toSerialize["periodStart"] = o.PeriodStart
	}
	if !IsNil(o.ProrationDate) {
		toSerialize["prorationDate"] = o.ProrationDate
	}
	if !IsNil(o.ProrationScale) {
		toSerialize["prorationScale"] = o.ProrationScale
	}
	if !IsNil(o.RefundId) {
		toSerialize["refundId"] = o.RefundId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SubscriptionAmount) {
		toSerialize["subscriptionAmount"] = o.SubscriptionAmount
	}
	if !IsNil(o.SubscriptionAmountExcludingTax) {
		toSerialize["subscriptionAmountExcludingTax"] = o.SubscriptionAmountExcludingTax
	}
	if !IsNil(o.TaxAmount) {
		toSerialize["taxAmount"] = o.TaxAmount
	}
	if !IsNil(o.TaxScale) {
		toSerialize["taxScale"] = o.TaxScale
	}
	if !IsNil(o.TotalAmount) {
		toSerialize["totalAmount"] = o.TotalAmount
	}
	if !IsNil(o.TotalAmountExcludingTax) {
		toSerialize["totalAmountExcludingTax"] = o.TotalAmountExcludingTax
	}
	return toSerialize, nil
}

type NullableUnibeeApiBeanInvoiceSimplify struct {
	value *UnibeeApiBeanInvoiceSimplify
	isSet bool
}

func (v NullableUnibeeApiBeanInvoiceSimplify) Get() *UnibeeApiBeanInvoiceSimplify {
	return v.value
}

func (v *NullableUnibeeApiBeanInvoiceSimplify) Set(val *UnibeeApiBeanInvoiceSimplify) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiBeanInvoiceSimplify) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiBeanInvoiceSimplify) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiBeanInvoiceSimplify(val *UnibeeApiBeanInvoiceSimplify) *NullableUnibeeApiBeanInvoiceSimplify {
	return &NullableUnibeeApiBeanInvoiceSimplify{value: val, isSet: true}
}

func (v NullableUnibeeApiBeanInvoiceSimplify) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiBeanInvoiceSimplify) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


