/*
OpenAPI UniBee

This is UniBee api server, For this sample, you can use the api key `EUXAgwv3Vcr1PFWt2SgBumMHXn3ImBqM` to test the authorization filters

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UnibeeInternalLogicGatewayRoUserMerchantMetricStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeInternalLogicGatewayRoUserMerchantMetricStat{}

// UnibeeInternalLogicGatewayRoUserMerchantMetricStat struct for UnibeeInternalLogicGatewayRoUserMerchantMetricStat
type UnibeeInternalLogicGatewayRoUserMerchantMetricStat struct {
	CurrentUseValue *int32 `json:"CurrentUseValue,omitempty"`
	MetricLimit *UnibeeInternalLogicGatewayRoMetricLimitVo `json:"MetricLimit,omitempty"`
}

// NewUnibeeInternalLogicGatewayRoUserMerchantMetricStat instantiates a new UnibeeInternalLogicGatewayRoUserMerchantMetricStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeInternalLogicGatewayRoUserMerchantMetricStat() *UnibeeInternalLogicGatewayRoUserMerchantMetricStat {
	this := UnibeeInternalLogicGatewayRoUserMerchantMetricStat{}
	return &this
}

// NewUnibeeInternalLogicGatewayRoUserMerchantMetricStatWithDefaults instantiates a new UnibeeInternalLogicGatewayRoUserMerchantMetricStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeInternalLogicGatewayRoUserMerchantMetricStatWithDefaults() *UnibeeInternalLogicGatewayRoUserMerchantMetricStat {
	this := UnibeeInternalLogicGatewayRoUserMerchantMetricStat{}
	return &this
}

// GetCurrentUseValue returns the CurrentUseValue field value if set, zero value otherwise.
func (o *UnibeeInternalLogicGatewayRoUserMerchantMetricStat) GetCurrentUseValue() int32 {
	if o == nil || IsNil(o.CurrentUseValue) {
		var ret int32
		return ret
	}
	return *o.CurrentUseValue
}

// GetCurrentUseValueOk returns a tuple with the CurrentUseValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeInternalLogicGatewayRoUserMerchantMetricStat) GetCurrentUseValueOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentUseValue) {
		return nil, false
	}
	return o.CurrentUseValue, true
}

// HasCurrentUseValue returns a boolean if a field has been set.
func (o *UnibeeInternalLogicGatewayRoUserMerchantMetricStat) HasCurrentUseValue() bool {
	if o != nil && !IsNil(o.CurrentUseValue) {
		return true
	}

	return false
}

// SetCurrentUseValue gets a reference to the given int32 and assigns it to the CurrentUseValue field.
func (o *UnibeeInternalLogicGatewayRoUserMerchantMetricStat) SetCurrentUseValue(v int32) {
	o.CurrentUseValue = &v
}

// GetMetricLimit returns the MetricLimit field value if set, zero value otherwise.
func (o *UnibeeInternalLogicGatewayRoUserMerchantMetricStat) GetMetricLimit() UnibeeInternalLogicGatewayRoMetricLimitVo {
	if o == nil || IsNil(o.MetricLimit) {
		var ret UnibeeInternalLogicGatewayRoMetricLimitVo
		return ret
	}
	return *o.MetricLimit
}

// GetMetricLimitOk returns a tuple with the MetricLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeInternalLogicGatewayRoUserMerchantMetricStat) GetMetricLimitOk() (*UnibeeInternalLogicGatewayRoMetricLimitVo, bool) {
	if o == nil || IsNil(o.MetricLimit) {
		return nil, false
	}
	return o.MetricLimit, true
}

// HasMetricLimit returns a boolean if a field has been set.
func (o *UnibeeInternalLogicGatewayRoUserMerchantMetricStat) HasMetricLimit() bool {
	if o != nil && !IsNil(o.MetricLimit) {
		return true
	}

	return false
}

// SetMetricLimit gets a reference to the given UnibeeInternalLogicGatewayRoMetricLimitVo and assigns it to the MetricLimit field.
func (o *UnibeeInternalLogicGatewayRoUserMerchantMetricStat) SetMetricLimit(v UnibeeInternalLogicGatewayRoMetricLimitVo) {
	o.MetricLimit = &v
}

func (o UnibeeInternalLogicGatewayRoUserMerchantMetricStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeInternalLogicGatewayRoUserMerchantMetricStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrentUseValue) {
		toSerialize["CurrentUseValue"] = o.CurrentUseValue
	}
	if !IsNil(o.MetricLimit) {
		toSerialize["MetricLimit"] = o.MetricLimit
	}
	return toSerialize, nil
}

type NullableUnibeeInternalLogicGatewayRoUserMerchantMetricStat struct {
	value *UnibeeInternalLogicGatewayRoUserMerchantMetricStat
	isSet bool
}

func (v NullableUnibeeInternalLogicGatewayRoUserMerchantMetricStat) Get() *UnibeeInternalLogicGatewayRoUserMerchantMetricStat {
	return v.value
}

func (v *NullableUnibeeInternalLogicGatewayRoUserMerchantMetricStat) Set(val *UnibeeInternalLogicGatewayRoUserMerchantMetricStat) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeInternalLogicGatewayRoUserMerchantMetricStat) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeInternalLogicGatewayRoUserMerchantMetricStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeInternalLogicGatewayRoUserMerchantMetricStat(val *UnibeeInternalLogicGatewayRoUserMerchantMetricStat) *NullableUnibeeInternalLogicGatewayRoUserMerchantMetricStat {
	return &NullableUnibeeInternalLogicGatewayRoUserMerchantMetricStat{value: val, isSet: true}
}

func (v NullableUnibeeInternalLogicGatewayRoUserMerchantMetricStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeInternalLogicGatewayRoUserMerchantMetricStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


