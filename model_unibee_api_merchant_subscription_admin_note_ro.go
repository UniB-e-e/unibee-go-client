/*
OpenAPI UniBee

This is UniBee api server, For this sample, you can use the api key `EUXAgwv3Vcr1PFWt2SgBumMHXn3ImBqM` to test the authorization filters

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UnibeeApiMerchantSubscriptionAdminNoteRo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnibeeApiMerchantSubscriptionAdminNoteRo{}

// UnibeeApiMerchantSubscriptionAdminNoteRo struct for UnibeeApiMerchantSubscriptionAdminNoteRo
type UnibeeApiMerchantSubscriptionAdminNoteRo struct {
	// 邮箱
	Email *string `json:"email,omitempty"`
	FirstName *string `json:"firstName,omitempty"`
	// 创建时间
	GmtCreate *string `json:"gmtCreate,omitempty"`
	// 修改时间
	GmtModify *string `json:"gmtModify,omitempty"`
	LastName *string `json:"lastName,omitempty"`
	// 手机号
	Mobile *string `json:"mobile,omitempty"`
	// SubscriptionId
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	// 用户名
	UserName *string `json:"userName,omitempty"`
}

// NewUnibeeApiMerchantSubscriptionAdminNoteRo instantiates a new UnibeeApiMerchantSubscriptionAdminNoteRo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnibeeApiMerchantSubscriptionAdminNoteRo() *UnibeeApiMerchantSubscriptionAdminNoteRo {
	this := UnibeeApiMerchantSubscriptionAdminNoteRo{}
	return &this
}

// NewUnibeeApiMerchantSubscriptionAdminNoteRoWithDefaults instantiates a new UnibeeApiMerchantSubscriptionAdminNoteRo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnibeeApiMerchantSubscriptionAdminNoteRoWithDefaults() *UnibeeApiMerchantSubscriptionAdminNoteRo {
	this := UnibeeApiMerchantSubscriptionAdminNoteRo{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) SetEmail(v string) {
	o.Email = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) SetFirstName(v string) {
	o.FirstName = &v
}

// GetGmtCreate returns the GmtCreate field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) GetGmtCreate() string {
	if o == nil || IsNil(o.GmtCreate) {
		var ret string
		return ret
	}
	return *o.GmtCreate
}

// GetGmtCreateOk returns a tuple with the GmtCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) GetGmtCreateOk() (*string, bool) {
	if o == nil || IsNil(o.GmtCreate) {
		return nil, false
	}
	return o.GmtCreate, true
}

// HasGmtCreate returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) HasGmtCreate() bool {
	if o != nil && !IsNil(o.GmtCreate) {
		return true
	}

	return false
}

// SetGmtCreate gets a reference to the given string and assigns it to the GmtCreate field.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) SetGmtCreate(v string) {
	o.GmtCreate = &v
}

// GetGmtModify returns the GmtModify field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) GetGmtModify() string {
	if o == nil || IsNil(o.GmtModify) {
		var ret string
		return ret
	}
	return *o.GmtModify
}

// GetGmtModifyOk returns a tuple with the GmtModify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) GetGmtModifyOk() (*string, bool) {
	if o == nil || IsNil(o.GmtModify) {
		return nil, false
	}
	return o.GmtModify, true
}

// HasGmtModify returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) HasGmtModify() bool {
	if o != nil && !IsNil(o.GmtModify) {
		return true
	}

	return false
}

// SetGmtModify gets a reference to the given string and assigns it to the GmtModify field.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) SetGmtModify(v string) {
	o.GmtModify = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) SetLastName(v string) {
	o.LastName = &v
}

// GetMobile returns the Mobile field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) GetMobile() string {
	if o == nil || IsNil(o.Mobile) {
		var ret string
		return ret
	}
	return *o.Mobile
}

// GetMobileOk returns a tuple with the Mobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) GetMobileOk() (*string, bool) {
	if o == nil || IsNil(o.Mobile) {
		return nil, false
	}
	return o.Mobile, true
}

// HasMobile returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) HasMobile() bool {
	if o != nil && !IsNil(o.Mobile) {
		return true
	}

	return false
}

// SetMobile gets a reference to the given string and assigns it to the Mobile field.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) SetMobile(v string) {
	o.Mobile = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *UnibeeApiMerchantSubscriptionAdminNoteRo) SetUserName(v string) {
	o.UserName = &v
}

func (o UnibeeApiMerchantSubscriptionAdminNoteRo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnibeeApiMerchantSubscriptionAdminNoteRo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.GmtCreate) {
		toSerialize["gmtCreate"] = o.GmtCreate
	}
	if !IsNil(o.GmtModify) {
		toSerialize["gmtModify"] = o.GmtModify
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.Mobile) {
		toSerialize["mobile"] = o.Mobile
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if !IsNil(o.UserName) {
		toSerialize["userName"] = o.UserName
	}
	return toSerialize, nil
}

type NullableUnibeeApiMerchantSubscriptionAdminNoteRo struct {
	value *UnibeeApiMerchantSubscriptionAdminNoteRo
	isSet bool
}

func (v NullableUnibeeApiMerchantSubscriptionAdminNoteRo) Get() *UnibeeApiMerchantSubscriptionAdminNoteRo {
	return v.value
}

func (v *NullableUnibeeApiMerchantSubscriptionAdminNoteRo) Set(val *UnibeeApiMerchantSubscriptionAdminNoteRo) {
	v.value = val
	v.isSet = true
}

func (v NullableUnibeeApiMerchantSubscriptionAdminNoteRo) IsSet() bool {
	return v.isSet
}

func (v *NullableUnibeeApiMerchantSubscriptionAdminNoteRo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnibeeApiMerchantSubscriptionAdminNoteRo(val *UnibeeApiMerchantSubscriptionAdminNoteRo) *NullableUnibeeApiMerchantSubscriptionAdminNoteRo {
	return &NullableUnibeeApiMerchantSubscriptionAdminNoteRo{value: val, isSet: true}
}

func (v NullableUnibeeApiMerchantSubscriptionAdminNoteRo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnibeeApiMerchantSubscriptionAdminNoteRo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


